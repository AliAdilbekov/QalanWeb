package tests;

import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.parallel.Execution;
import org.junit.jupiter.api.parallel.ExecutionMode;
import org.junit.jupiter.api.parallel.ResourceLock;
import testData.TestBase;

import static com.codeborne.selenide.Selenide.sleep;

@Execution(ExecutionMode.SAME_THREAD)
public class RegistrationTest extends TestBase {

    @Test
    @ResourceLock(value = "sharedResource")
    void testSuccessRegistration() {

        // üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        String name = faker.name().firstName();
        String surname = faker.name().lastName();
        String phone = "707" + faker.number().digits(7);
        String password = faker.number().digits(8);

        // üöÄ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
        registrationPage.openRegistrationPage()
                .enterFirstName(name)
                .enterLastName(surname)
                .enterPhoneNumber(phone)
                .enterPassword(password)
                .enterRepeatPassword(password)
                .selectPupilRole()
                .scrollToSubmitButton()
                .clickSubmitButton()
                .verifyUserFullName(name + " " + surname)
                .printGeneratedData(name, surname, phone, password, password)
                .verifyNameSurnameInConsole(name, surname);
        sleep(2000);
    }

    @Test
    @ResourceLock(value = "sharedResource")
    void testIncorrectPhone() {

        // üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        String name = faker.name().firstName();
        String surname = faker.name().lastName();
        String invalidPhone = "707" + faker.number().digits(6);
        String password = faker.number().digits(8);

        registrationPage.openRegistrationPage()
                .enterFirstName(name)
                .enterLastName(surname)
                .enterPhoneNumber(invalidPhone)
                .enterPassword(password)
                .enterRepeatPassword(password)
                .selectPupilRole()
                .scrollToSubmitButton()
                .clickSubmitButton()
                .verifyErrorMessage("–¢–µ–ª–µ—Ñ–æ–Ω –Ω”©–º—ñ—Ä—ñ –¥“±—Ä—ã—Å —Ç–µ—Ä—ñ–ª–≥–µ–Ω—ñ–Ω —Ç–µ–∫—Å–µ—Ä—ñ“£—ñ–∑")
                .printGeneratedData(name, surname, invalidPhone, password, password);
        sleep(2000);
    }

    @Test
    @ResourceLock(value = "sharedResource")
    void testIncorrectPassword() {

        // üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        String name = faker.name().firstName();
        String surname = faker.name().lastName();
        String phone = "707" + faker.number().digits(7);
        String invalidPassword = faker.number().digits(7);

        registrationPage.openRegistrationPage()
                .enterFirstName(name)
                .enterLastName(surname)
                .enterPhoneNumber(phone)
                .enterPassword(invalidPassword)
                .enterRepeatPassword(invalidPassword)
                .selectPupilRole()
                .scrollToSubmitButton()
                .clickSubmitButton()
                .verifyErrorMessage("“ö“±–ø–∏—è —Å”©–∑–¥—ñ“£ “±–∑—ã–Ω–¥—ã“ì—ã 8-–¥–µ–Ω –∫–µ–º –µ–º–µ—Å –∂”ô–Ω–µ 15-—Ç–µ–Ω –∞—Ä—Ç—ã“õ –±–æ–ª–º–∞—É—ã –∫–µ—Ä–µ–∫")
                .printGeneratedData(name, surname, phone, invalidPassword, invalidPassword);
        sleep(2000);
    }

    @Test
    @ResourceLock(value = "sharedResource")
    void testIncorrectRepeatPassword() {

        // üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        String name = faker.name().firstName();
        String surname = faker.name().lastName();
        String phone = "707" + faker.number().digits(7);
        String password = faker.number().digits(8);
        String invalidPassword = faker.number().digits(7);

        registrationPage.openRegistrationPage()
                .enterFirstName(name)
                .enterLastName(surname)
                .enterPhoneNumber(phone)
                .enterPassword(password)
                .enterRepeatPassword(invalidPassword)
                .selectPupilRole()
                .scrollToSubmitButton()
                .clickSubmitButton()
                .verifyErrorMessage("–¢–µ—Ä–≥–µ–Ω –µ–∫—ñ “õ“±–ø–∏—è —Å”©–∑ –±—ñ—Ä-–±—ñ—Ä—ñ–Ω–µ —Å”ô–π–∫–µ—Å –∫–µ–ª–º–µ–π–¥—ñ")
                .printGeneratedData(name, surname, phone, password, invalidPassword);
        sleep(2000);
    }

    @Test
    @ResourceLock(value = "sharedResource")
    void testWithOutRole() {

        // üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        String name = faker.name().firstName();
        String surname = faker.name().lastName();
        String phone = "707" + faker.number().digits(7);
        String password = faker.number().digits(8);

        registrationPage.openRegistrationPage()
                .enterFirstName(name)
                .enterLastName(surname)
                .enterPhoneNumber(phone)
                .enterPassword(password)
                .enterRepeatPassword(password)
                .scrollToSubmitButton()
                .clickSubmitButton()
                .verifyErrorMessage("–û“õ—É—à—ã –Ω–µ–º–µ—Å–µ –º“±“ì–∞–ª—ñ–º –µ–∫–µ–Ω—ñ“£—ñ–∑–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑")
                .printGeneratedData(name, surname, phone, password, password);
        sleep(2000);
    }

    @Test
    @ResourceLock(value = "sharedResource")
    void testIncorrectName() {

        // üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        String invalidName = faker.letterify("?");
        String surname = faker.name().lastName();
        String phone = "707" + faker.number().digits(7);
        String password = faker.number().digits(8);

        registrationPage.openRegistrationPage()
                .enterFirstName(invalidName)
                .enterLastName(surname)
                .enterPhoneNumber(phone)
                .enterPassword(password)
                .enterRepeatPassword(password)
                .selectPupilRole()
                .scrollToSubmitButton()
                .clickSubmitButton()
                .verifyErrorMessage("–ê—Ç—ã“£—ã–∑ –±–µ–Ω —Ç–µ–≥—ñ“£—ñ–∑–¥—ñ —Ç–æ–ª—ã“õ –∂–∞–∑—ã“£—ã–∑")
                .printGeneratedData(invalidName, surname, phone, password, password);
        sleep(2000);
    }

    @Test
    @ResourceLock(value = "sharedResource")
    void testEmptyName() {

        // üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        String surname = faker.name().lastName();
        String phone = "707" + faker.number().digits(7);
        String password = faker.number().digits(8);

        registrationPage.openRegistrationPage()
                .enterFirstName("")
                .enterLastName(surname)
                .enterPhoneNumber(phone)
                .enterPassword(password)
                .enterRepeatPassword(password)
                .selectPupilRole()
                .scrollToSubmitButton()
                .clickSubmitButton()
                .verifyErrorMessage("–ë–æ—Å ”©—Ä—ñ—Å—Ç–µ—Ä–¥—ñ —Ç–æ–ª—Ç—ã—Ä—ã“£—ã–∑")
                .printGeneratedData("", surname, phone, password, password);
        sleep(2000);
    }

    @Test
    @ResourceLock(value = "sharedResource")
    void testIncorrectSurname() {

        // üé≤ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        String name = faker.name().firstName();
        String phone = "707" + faker.number().digits(7);
        String password = faker.number().digits(8);

        registrationPage.openRegistrationPage()
                .enterFirstName(name)
                .enterLastName("+++")
                .enterPhoneNumber(phone)
                .enterPassword(password)
                .enterRepeatPassword(password)
                .selectPupilRole()
                .scrollToSubmitButton()
                .clickSubmitButton()
                .verifyErrorMessage("–¢–µ–≥—ñ —Ç–µ–∫ ”ô—Ä—ñ–ø—Ç–µ—Ä–¥–µ–Ω —Ç“±—Ä—É—ã –∫–µ—Ä–µ–∫")
                .printGeneratedData(name, "+++", phone, password, password);
        sleep(2000);
    }
}