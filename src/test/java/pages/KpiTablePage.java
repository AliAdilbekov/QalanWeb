package pages;

import com.codeborne.selenide.ElementsCollection;
import com.codeborne.selenide.Selenide;
import com.codeborne.selenide.SelenideElement;
import io.qameta.allure.Step;

import java.time.Duration;

import static com.codeborne.selenide.Condition.text;
import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selenide.*;


public class KpiTablePage {

    private final SelenideElement
        serviceChapter = $x("/html/body/div[2]/div[1]/div/div[1]/div/div/div/div[2]/nav/div[1]/div[4]/span"),
        kpiButton = $x("/html/body/div[2]/div[1]/div/div[1]/div/div/div/div[2]/div/main/div[1]/div[1]"),
        personalStudyKpi = $x("/html/body/div[2]/div[1]/div/div[1]/div/div/div/div[2]/div/main/div[3]/div[1]/div[1]"),
        companyInput = $("#select-company"),
        dateInput = $("#date-picker"),
        newPupils = $x("/html/body/div[2]/div[1]/div/div[1]/div/div/div/div[2]/div/main/div[3]/div[1]/div[2]"),
        kazLanguageRadio = $("#radio-kaz"),
        loadButton = $("#load-btn"),
        dateConfirmationBlock = $x("/html/body/div[2]/div[1]/div/div[1]/div/div/div/div[2]/div/main/main/div[4]/div[2]/div/div/div[2]/div[2]/div[1]/div[5]"),
        notComplitedInRow = $x("/html/body/div[2]/div[1]/div/div[1]/div/div/div/div[2]/div/main/div[3]/div[1]/div[3]"),
        tenFifteen = $x("/html/body/div[2]/div[1]/div/div[1]/div/div/div/div[2]/div/main/main/div[3]/button[1]"),
        fifteenPlus = $x("/html/body/div[2]/div[1]/div/div[1]/div/div/div/div[2]/div/main/main/div[3]/button[2]"),
        untPupilsKpi = $x("/html/body/div[2]/div[1]/div/div[1]/div/div/div/div[2]/div/main/div[3]/div[2]/div[4]");


    @Step("–õ–æ–≥–∏–Ω–∏–º—Å—è –∫–∞–∫ —Å–µ—Ä–≤–∏—Å-–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {phone}")
    public KpiTablePage loginAsService(String phone, String password, String expectedUsername) {
        new LoginPage()
                .openLoginPage()
                .clickSignButton()
                .enterPhoneNumber(phone)
                .enterPassword(password)
                .clickSubmitButton()
                .verifySuccessfulLogin(expectedUsername);
        return this;
    }

    @Step("–ù–∞–∂–∏–º–∞–µ–º –Ω–∞ —Ä–∞–∑–¥–µ–ª —Å–µ—Ä–≤–∏—Å")
    public KpiTablePage clickServiceChapter() {
        try {
            serviceChapter.shouldBe(visible, Duration.ofSeconds(10)).click();
            sleep(2000);
        } catch (Exception e) {
            throw new RuntimeException("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –Ω–∞ —Ä–∞–∑–¥–µ–ª '–°–µ—Ä–≤–∏—Å': " + e.getMessage());
        }
        return this;
    }

    @Step("–ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    public KpiTablePage clickKpiButton() {
        try {
            kpiButton.shouldBe(visible, Duration.ofSeconds(10)).click();
            sleep(2000);
        } catch (Exception e) {
            throw new RuntimeException("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É '–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞': " + e.getMessage());
        }
        return this;
    }

    @Step("–í—ã–±–∏—Ä–∞–µ–º –º–æ–¥—É–ª—å –ü–µ—Ä—Å–æ–Ω–∞–ª–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ KPI")
    public KpiTablePage clickPersonalStudyKpi() {
        try {
            personalStudyKpi.shouldBe(visible, Duration.ofSeconds(10)).click();
            sleep(2000);
        } catch (Exception e) {
            throw new RuntimeException("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å '–ü–µ—Ä—Å–æ–Ω–∞–ª–Ω–æ–µ –æ–±—É—á–µ–Ω–∏–µ KPI': " + e.getMessage());
        }
        return this;
    }

    @Step("–í–≤–æ–¥–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏: {companyName} –∏ –∂–º–µ–º Enter")
    public KpiTablePage typeCompanyNameAndSelect(String companyName) {
        try {
            companyInput.shouldBe(visible, Duration.ofSeconds(10))
                    .setValue(companyName)
                    .pressEnter();
        } catch (Exception e) {
            throw new RuntimeException("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –∫–æ–º–ø–∞–Ω–∏—é: " + companyName + " ‚Äî " + e.getMessage());
        }
        return this;
    }

    @Step("–í–≤–æ–¥–∏–º –¥–∞—Ç—É: {date} –∏ –∂–¥—ë–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã")
    public KpiTablePage enterDate(String date) {
        try {
            dateInput.shouldBe(visible, Duration.ofSeconds(10)).setValue(date).pressEnter();
            $("#kpi-td-date").shouldBe(visible, Duration.ofSeconds(10)).shouldHave(text(date));
        } catch (Exception e) {
            throw new RuntimeException("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É –∏–ª–∏ —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ –æ–±–Ω–æ–≤–∏–ª–∞—Å—å: " + e.getMessage());
        }
        return this;
    }


    @Step("–ü—Ä–æ–≤–µ—Ä—è–µ–º KPI-–¥–∞–Ω–Ω—ã–µ —Å –ª–æ–≥–æ–º")
    public KpiTablePage verifyKpiRowDataWithLogs(
            String expectedDate,
            String expectedGraduates,
            String expectedSubscribers,
            String expectedKpi,
            String expectedFreezings,
            String expectedFreezingPercent) {

        String actualDate = $("#kpi-td-date").shouldBe(visible).getText();
        String actualGraduates = $("#kpi-td-graduates").shouldBe(visible).getText();
        String actualSubscribers = $("#kpi-td-subscribers").shouldBe(visible).getText();
        String actualKpi = $("#kpi-td-kpi").shouldBe(visible).getText();
        String actualFreezings = $("#kpi-td-freezings").shouldBe(visible).getText();
        String actualFreezingPercent = $("#kpi-td-freezing-percent").shouldBe(visible).getText();

        System.out.println("üîç [KPI DATA]");
        System.out.println("–î–∞—Ç–∞:         –æ–∂–∏–¥–∞–µ–º '" + expectedDate + "' | –Ω–∞–π–¥–µ–Ω–æ '" + actualDate + "'");
        System.out.println("–í—ã–ø–æ–ª–Ω–∏–ª–∏:    –æ–∂–∏–¥–∞–µ–º '" + expectedGraduates + "' | –Ω–∞–π–¥–µ–Ω–æ '" + actualGraduates + "'");
        System.out.println("–ü–æ–¥–ø–∏—Å–∞–ª–∏—Å—å:  –æ–∂–∏–¥–∞–µ–º '" + expectedSubscribers + "' | –Ω–∞–π–¥–µ–Ω–æ '" + actualSubscribers + "'");
        System.out.println("KPI:          –æ–∂–∏–¥–∞–µ–º '" + expectedKpi + "' | –Ω–∞–π–¥–µ–Ω–æ '" + actualKpi + "'");
        System.out.println("–ó–∞–º–æ—Ä–æ–∑–∫–∏:    –æ–∂–∏–¥–∞–µ–º '" + expectedFreezings + "' | –Ω–∞–π–¥–µ–Ω–æ '" + actualFreezings + "'");
        System.out.println("–ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–º.: –æ–∂–∏–¥–∞–µ–º '" + expectedFreezingPercent + "' | –Ω–∞–π–¥–µ–Ω–æ '" + actualFreezingPercent + "'");

        // –°—Ä–∞–≤–Ω–µ–Ω–∏—è —Å –æ—à–∏–±–∫–æ–π –ø—Ä–∏ —Ä–∞—Å—Ö–æ–∂–¥–µ–Ω–∏–∏
        assert actualDate.equals(expectedDate) : "‚ùå –î–∞—Ç–∞ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!";
        assert actualGraduates.equals(expectedGraduates) : "‚ùå –ö–æ–ª-–≤–æ –≤—ã–ø–æ–ª–Ω–∏–≤—à–∏—Ö –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!";
        assert actualSubscribers.equals(expectedSubscribers) : "‚ùå –ö–æ–ª-–≤–æ –ø–æ–¥–ø–∏—Å–∞–≤—à–∏—Ö—Å—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!";
        assert actualKpi.equals(expectedKpi) : "‚ùå KPI –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!";
        assert actualFreezings.equals(expectedFreezings) : "‚ùå –ó–∞–º–æ—Ä–æ–∑–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!";
        assert actualFreezingPercent.equals(expectedFreezingPercent) : "‚ùå –ü—Ä–æ—Ü–µ–Ω—Ç –∑–∞–º–æ—Ä–æ–∑–∫–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞–µ—Ç!";

        System.out.println("‚úÖ –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å–æ–≤–ø–∞–¥–∞—é—Ç");
        return this;
    }

    @Step("–í—ã–±–∏—Ä–∞–µ–º –º–æ–¥—É–ª—å –ù–æ–≤—ã–µ —É—á–µ–Ω–∏–∫–∏")
    public KpiTablePage clickNewPupils() {
        newPupils.shouldBe(visible, Duration.ofSeconds(10)).click();
        sleep(2000);
        return this;

    }

    @Step("–í—ã–±–∏—Ä–∞–µ–º —è–∑—ã–∫ –æ–±—É—á–µ–Ω–∏—è: –∫–∞–∑–∞—Ö—Å–∫–∏–π")
    public KpiTablePage selectKazakhLanguage() {
        try {
            kazLanguageRadio.shouldBe(visible, Duration.ofSeconds(10)).click();
        } catch (Exception e) {
            throw new RuntimeException("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–±—Ä–∞—Ç—å –∫–∞–∑–∞—Ö—Å–∫–∏–π —è–∑—ã–∫ –æ–±—É—á–µ–Ω–∏—è: " + e.getMessage());
        }
        return this;
    }

    @Step("–ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É LOAD –∏ –∂–¥—ë–º –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤")
    public KpiTablePage clickLoadButton() {
        try {
            loadButton.shouldBe(visible, Duration.ofSeconds(10)).click();
            // –î–∞—ë–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–ø—É—Å–∫ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
            sleep(2000); // –í–∞–∂–Ω–æ! –£–±–∏—Ä–∞–µ—Ç –≥–æ–Ω–∫—É

            // –ñ–¥—ë–º –ø–æ—è–≤–ª–µ–Ω–∏–µ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ–≥–æ —É—á–µ–Ω–∏–∫–∞
            $("#pupil-code-0-0").shouldBe(visible, Duration.ofSeconds(20));
        } catch (Exception e) {
            throw new RuntimeException("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –¥–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–≥—Ä—É–∑–∫–∏ —É—á–µ–Ω–∏–∫–æ–≤: " + e.getMessage());
        }
        return this;
    }



    @Step("–í–≤–æ–¥–∏–º –¥–∞—Ç—É –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–∞–±–ª–∏—Ü—ã: {date}")
    public KpiTablePage enterDateForNewPupils(String date) {
        try {
            dateInput.shouldBe(visible, Duration.ofSeconds(10)).click();
            sleep(500); // –∏–º–∏—Ç–∞—Ü–∏—è –ø–∞—É–∑—ã –ø–µ—Ä–µ–¥ –≤–≤–æ–¥–æ–º
            for (char c : date.toCharArray()) {
                dateInput.sendKeys(String.valueOf(c));
                sleep(150); // –º–µ–∂–¥—É –∫–∞–∂–¥—ã–º —Å–∏–º–≤–æ–ª–æ–º
            }
            sleep(500); // –Ω–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ Enter
            dateInput.pressEnter();
            sleep(2000); // –∂–¥—ë–º –ø–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è Enter
        } catch (Exception e) {
            throw new RuntimeException("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É (–Ω–æ–≤—ã–µ —É—á–µ–Ω–∏–∫–∏): " + e.getMessage());
        }
        return this;
    }



    @Step("–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–æ–¥—É–ª–µ '–ù–æ–≤—ã–µ —É—á–µ–Ω–∏–∫–∏'")
    public KpiTablePage verifyNewPupilsData() {
        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞—Ç—ã –ø–æ —á–∞—Å—Ç–∏—á–Ω–æ–º—É —Å–æ–≤–ø–∞–¥–µ–Ω–∏—é
        String expectedDatePart = "01.04.2024"; // –∏–ª–∏ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –ø–∞—Ä–∞–º–µ—Ç—Ä
        String dateText = $("#accordion-title-0").shouldBe(visible).getText();
        System.out.println("üìÖ –î–∞—Ç–∞ –∑–∞–≥–æ–ª–æ–≤–∫–∞: " + dateText);
        assert dateText.contains(expectedDatePart) : "‚ùå –û–∂–∏–¥–∞–µ–º–∞—è –¥–∞—Ç–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç '" + expectedDatePart + "', –Ω–æ –Ω–∞–π–¥–µ–Ω–æ: " + dateText;

        // 2-4. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
        String finished = $("#finished-label-0").getText();
        System.out.println("üë®‚Äçüéì –ó–∞–≤–µ—Ä—à–∏–ª–∏: " + finished);
        assert finished.equals("10") : "‚ùå –ó–∞–≤–µ—Ä—à–∏–≤—à–∏—Ö –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 10, –Ω–æ –Ω–∞–π–¥–µ–Ω–æ: " + finished;

        String nonFinished = $("#nonfinished-label-0").getText();
        System.out.println("üôã‚Äç‚ôÇÔ∏è –ù–µ –∑–∞–≤–µ—Ä—à–∏–ª–∏: " + nonFinished);
        assert nonFinished.equals("5") : "‚ùå –ù–µ–∑–∞–≤–µ—Ä—à–∏–≤—à–∏—Ö –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 5, –Ω–æ –Ω–∞–π–¥–µ–Ω–æ: " + nonFinished;

        String average = $("#average-label-0").getText();
        System.out.println("üìä –°—Ä–µ–¥–Ω–µ–µ: " + average);
        assert average.equals("67%") : "‚ùå –°—Ä–µ–¥–Ω–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 67%, –Ω–æ –Ω–∞–π–¥–µ–Ω–æ: " + average;

        // 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—á–µ–Ω–∏–∫–æ–≤ (pupil-code)
        int foundPupils = 0;
        for (int i = 0; i < 15; i++) {
            $("#pupil-code-" + i + "-0").shouldBe(visible);
            foundPupils++;
        }
        System.out.println("üë∂ –ù–∞–π–¥–µ–Ω–æ —É—á–µ–Ω–∏–∫–æ–≤: " + foundPupils);
        assert foundPupils == 15 : "‚ùå –û–∂–∏–¥–∞–ª–æ—Å—å 15 —É—á–µ–Ω–∏–∫–æ–≤, –Ω–æ –Ω–∞–π–¥–µ–Ω–æ: " + foundPupils;

        // 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º—ë–Ω
        int correctNames = 0;
        for (int i = 0; i < 15; i++) {
            String fullName = $("#fullname-" + i + "-0").getText();
            System.out.println("üë§ FullName[" + i + "]: " + fullName);
            if (fullName.equals("For AutoTest1")) {
                correctNames++;
            }
        }
        System.out.println("‚úÖ –ö–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö –∏–º—ë–Ω: " + correctNames);
        assert correctNames == 15 : "‚ùå –ù–µ —É –≤—Å–µ—Ö —É—á–µ–Ω–∏–∫–æ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π full name, –Ω–∞–π–¥–µ–Ω–æ: " + correctNames;

        // 7. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–æ–≤ finished
        ElementsCollection finishedStatuses = $$("[id^=finished-status]");
        System.out.println("‚úÖ –ù–∞–π–¥–µ–Ω–æ finished-status —ç–ª–µ–º–µ–Ω—Ç–æ–≤: " + finishedStatuses.size());
        assert finishedStatuses.size() == 10 : "‚ùå –î–æ–ª–∂–Ω–æ –±—ã—Ç—å 10 finished-status, –Ω–∞–π–¥–µ–Ω–æ: " + finishedStatuses.size();

        // 8. –ü—Ä–æ–≤–µ—Ä–∫–∞ freeze-status
        ElementsCollection freezeStatuses = $$("[id^=freeze-status]");
        System.out.println("‚ùÑÔ∏è –ù–∞–π–¥–µ–Ω–æ freeze-status —ç–ª–µ–º–µ–Ω—Ç–æ–≤: " + freezeStatuses.size());
        assert freezeStatuses.size() >= 0 : "‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –æ–¥–∏–Ω freeze-status";

        System.out.println("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –º–æ–¥—É–ª—é '–ù–æ–≤—ã–µ —É—á–µ–Ω–∏–∫–∏' –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!");
        return this;
    }

    @Step("–ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –º–æ–¥—É–ª–µ '–£—á–µ–Ω–∏–∫–∏ –ï–ù–¢'")
    public KpiTablePage verifyUntPupilsData() {
        // 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —É—á–µ–Ω–∏–∫–æ–≤ –ø–æ –∫–æ–¥—É
        int pupilCount = 0;
        for (int i = 0; i < 10; i++) {
            SelenideElement code = $("#pupil-code-" + i + "-0");
            if (code.exists()) {
                code.shouldBe(visible);
                pupilCount++;
                System.out.println("‚úÖ –ù–∞–π–¥–µ–Ω —É—á–µ–Ω–∏–∫ —Å ID: pupil-code-" + i + "-0");
            }
        }
        System.out.println("üîç –í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —É—á–µ–Ω–∏–∫–æ–≤: " + pupilCount);
        assert pupilCount >= 2 : "‚ùå –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 2 —É—á–µ–Ω–∏–∫–∞ (pupil-code-*), –Ω–æ –Ω–∞–π–¥–µ–Ω–æ: " + pupilCount;

        // 2. –ü–æ–∏—Å–∫ –æ–¥–Ω–æ–≥–æ finished-status
        ElementsCollection finishedStatuses = $$("[id^=finished-status]");
        System.out.println("üèÅ –ù–∞–π–¥–µ–Ω–æ finished-status: " + finishedStatuses.size());
        assert finishedStatuses.size() >= 1 : "‚ùå –û–∂–∏–¥–∞–ª—Å—è —Ö–æ—Ç—è –±—ã 1 —ç–ª–µ–º–µ–Ω—Ç finished-status";

        // 3. –ü–æ–∏—Å–∫ –æ–¥–Ω–æ–≥–æ not-finished-status
        ElementsCollection notFinishedStatuses = $$("[id^=not-finished-status]");
        System.out.println("üîÅ –ù–∞–π–¥–µ–Ω–æ not-finished-status: " + notFinishedStatuses.size());
        assert notFinishedStatuses.size() >= 1 : "‚ùå –û–∂–∏–¥–∞–ª—Å—è —Ö–æ—Ç—è –±—ã 1 —ç–ª–µ–º–µ–Ω—Ç not-finished-status";

        // 4. –ü–æ–∏—Å–∫ freeze-status
        ElementsCollection freezeStatuses = $$("[id^=freeze-status]");
        System.out.println("‚ùÑÔ∏è –ù–∞–π–¥–µ–Ω–æ freeze-status: " + freezeStatuses.size());
        assert freezeStatuses.size() >= 1 : "‚ùå –û–∂–∏–¥–∞–ª—Å—è —Ö–æ—Ç—è –±—ã 1 —ç–ª–µ–º–µ–Ω—Ç freeze-status";

        // 5. –ü–æ–∏—Å–∫ freezing-status
        ElementsCollection freezingStatuses = $$("[id^=freezing-status]");
        System.out.println("üßä –ù–∞–π–¥–µ–Ω–æ freezing-status: " + freezingStatuses.size());
        assert freezingStatuses.size() >= 1 : "‚ùå –û–∂–∏–¥–∞–ª—Å—è —Ö–æ—Ç—è –±—ã 1 —ç–ª–µ–º–µ–Ω—Ç freezing-status";

        System.out.println("üéâ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ –º–æ–¥—É–ª—é '–£—á–µ–Ω–∏–∫–∏ –ï–ù–¢' –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!");
        return this;
    }

    @Step("–í—ã–±–∏—Ä–∞–µ–º –º–æ–¥—É–ª—å –£—á–µ–Ω–∏–∫–∏ –ï–ù–¢")
    public KpiTablePage clickUntPupilsKpi() {
        untPupilsKpi.shouldBe(visible, Duration.ofSeconds(10)).click();
        sleep(2000);
        return this;
    }

    @Step("–í—ã–±–∏—Ä–∞–µ–º –∫–∞–∑–∞—Ö—Å–∫–∏–π —è–∑—ã–∫ –æ–±—É—á–µ–Ω–∏—è")
    public KpiTablePage selectKazLanguage() {
        kazLanguageRadio.shouldBe(visible, Duration.ofSeconds(10)).click();
        sleep(1000);
        return this;
    }

    @Step("–í–≤–æ–¥–∏–º –¥–∞—Ç—É –¥–ª—è –º–æ–¥—É–ª—è –ï–ù–¢: {date}")
    public KpiTablePage enterDateForUnt(String date) {
        try {
            dateInput.shouldBe(visible, Duration.ofSeconds(10)).click();
            sleep(300);
            dateInput.setValue(date);
            sleep(500); // –∏–º–∏—Ç–∞—Ü–∏—è –ø–∞—É–∑—ã –ø–µ—Ä–µ–¥ –Ω–∞–∂–∞—Ç–∏–µ–º
            dateInput.pressEnter();
            sleep(3000); // –¥–∞—ë–º –≤—Ä–µ–º—è –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ç–∞–±–ª–∏—Ü—ã
        } catch (Exception e) {
            throw new RuntimeException("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–≤–µ—Å—Ç–∏ –¥–∞—Ç—É (–ï–ù–¢): " + e.getMessage());
        }
        return this;
    }

    
}


