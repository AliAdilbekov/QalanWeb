package pages;

import com.codeborne.selenide.Selenide;
import com.codeborne.selenide.SelenideElement;
import io.qameta.allure.Step;
import org.openqa.selenium.By;

import java.time.Duration;

import static com.codeborne.selenide.Condition.text;
import static com.codeborne.selenide.Condition.visible;
import static com.codeborne.selenide.Selenide.$;

public class RegistrationPage {

    // üîó URL —Å–∞–π—Ç–∞
    private static final String BASE_URL = "https://test.qalan.kz";

    private final SelenideElement modal = $(By.id("add-survey-modal-body"));

    private final SelenideElement
            signButton = $(By.id("sign-button")),
            registerSwitch = $(By.id("add-survey-modal-switch-register")),
            nameInput = modal.$(By.id("register-name-input")),
            surnameInput = modal.$(By.id("register-surname-input")),
            phoneInput = modal.$(By.id("phone-input-id")),
            passwordInput = modal.$(By.id("register-password-input")),
            repeatPasswordInput = modal.$(By.id("register-repeat-password-input")),
            pupilRadioButton = modal.$(By.id("register-radio-pupil")),
            submitButton = modal.$(By.id("register-submit-button")),
            userFullNameContainer = $(By.id("user-fullname-container"));

    @Step("–û—Ç–∫—Ä—ã–≤–∞–µ–º —Å–∞–π—Ç –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Ñ–æ—Ä–º–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    public RegistrationPage openRegistrationPage() {
        Selenide.open(BASE_URL);
        signButton.shouldBe(visible).click();
        registerSwitch.shouldBe(visible).click();
        return this;
    }

    @Step("–í–≤–æ–¥–∏–º –∏–º—è: {name}")
    public RegistrationPage enterFirstName(String name) {
        nameInput.shouldBe(visible).setValue(name);
        return this;
    }

    @Step("–í–≤–æ–¥–∏–º —Ñ–∞–º–∏–ª–∏—é: {surname}")
    public RegistrationPage enterLastName(String surname) {
        surnameInput.shouldBe(visible).setValue(surname);
        return this;
    }

    @Step("–í–≤–æ–¥–∏–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: {phone}")
    public RegistrationPage enterPhoneNumber(String phone) {
        phoneInput.shouldBe(visible).setValue(phone);
        return this;
    }

    @Step("–í–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å: {password}")
    public RegistrationPage enterPassword(String password) {
        passwordInput.shouldBe(visible).setValue(password);
        return this;
    }

    @Step("–ü–æ–≤—Ç–æ—Ä–Ω–æ –≤–≤–æ–¥–∏–º –ø–∞—Ä–æ–ª—å: {password}")
    public RegistrationPage enterRepeatPassword(String password) {
        repeatPasswordInput.shouldBe(visible).setValue(password);
        return this;
    }

    @Step("–í—ã–±–∏—Ä–∞–µ–º —Ä–æ–ª—å —É—á–µ–Ω–∏–∫–∞")
    public RegistrationPage selectPupilRole() {
        pupilRadioButton.shouldBe(visible).click();
        return this;
    }

    @Step("–ü—Ä–æ–∫—Ä—É—á–∏–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ –∫–Ω–æ–ø–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏")
    public RegistrationPage scrollToSubmitButton() {
        Selenide.executeJavaScript("arguments[0].scrollIntoView({behavior: 'smooth', block: 'center'});", submitButton.getWrappedElement());
        Selenide.sleep(1500);
        submitButton.shouldBe(visible);
        return this;
    }

    @Step("–ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É '–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è'")
    public RegistrationPage clickSubmitButton() {
        submitButton.shouldBe(visible).click();
        return this;
    }

    @Step("–ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {expectedName}")
    public RegistrationPage verifyUserFullName(String expectedName) {
        userFullNameContainer.shouldBe(visible, Duration.ofSeconds(15)).shouldHave(text(expectedName));
        return this;
    }

    @Step("–í—ã–≤–æ–¥–∏–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")
    public RegistrationPage printGeneratedData(String name, String surname, String phone, String password, String repeatPassword) {
        System.out.println("üë§ –ò–º—è: " + name);
        System.out.println("üë§ –§–∞–º–∏–ª–∏—è: " + surname);
        System.out.println("üìû –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –Ω–æ–º–µ—Ä: " + phone);
        System.out.println("üîë –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å: " + password);
        System.out.println("‚ö†Ô∏è –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å: " + repeatPassword);
        return this;
    }

    @Step("üß™ –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º—ã—Ö –∏–º–µ–Ω–∏ –∏ —Ñ–∞–º–∏–ª–∏–∏")
    public void verifyNameSurnameInConsole(String expectedName, String expectedSurname) {
        String actualNameSurname = userFullNameContainer.getText();
        String expectedFullName = expectedName + " " + expectedSurname;

        if (actualNameSurname.equals(expectedFullName)) {
            System.out.println("‚úÖ –£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è: " + actualNameSurname);
        } else {
            System.out.println("‚ùå –ù–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ: –æ–∂–∏–¥–∞–ª–æ—Å—å " + expectedFullName + ", –∞ –ø–æ–ª—É—á–∏–ª–∏ " + actualNameSurname);
        }
    }

    @Step("–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: {expectedError}")
    public RegistrationPage verifyErrorMessage(String expectedError) {
        SelenideElement errorMessage = $(By.id("register-error-text"));
        errorMessage.shouldBe(visible, Duration.ofSeconds(10)).shouldHave(text(expectedError));
        // üñ®Ô∏è –í—ã–≤–æ–¥–∏–º —Ç–µ–∫—Å—Ç –æ—à–∏–±–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª—å
        String actualErrorText = errorMessage.getText();
        System.out.println("‚ùå –¢–µ–∫—Å—Ç –æ—à–∏–±–∫–∏: " + actualErrorText);
        return this;
    }

}